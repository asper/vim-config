snippet type
	<?php

	namespace ${1:`substitute(substitute(expand("%:h"), '\v^\w+\/(\u)', '\1', ''), '\/', '\\\', 'g')`};

	use Symfony\Component\Form\AbstractType;
	use Symfony\Component\Form\FormBuilder;

	/**
	 * ${2:`Filename('', 'myType')`}.
	 */
	class $2 extends AbstractType
	{
		public function buildForm(FormBuilder $builder, array $options)
		{
			${3}
		}

		public function getDefaultOptions(array $options)
		{
		    return array();
		}

		public function getName()
		{
		    return '';
		}
	}

snippet controller
	<?php
	
	namespace ${1:`substitute(substitute(expand("%:h"), '\v^\w+\/(\u)', '\1', ''), '\/', '\\\', 'g')`};
	
	use Symfony\Bundle\FrameworkBundle\Controller\Controller;
	
	/**
	 * ${2:`Filename('', 'myController')`}.
	 *
	 * @author ${3:Olivier Dolbeau <contact@odolbeau.fr>}
	 */
	class $2 extends Controller
	{
		protected function ${4:index}Action()
		{
			return $this->render('${5}:${6}:$4.html.twig');
		}
	}
snippet command
	<?php
	
	namespace ${1:`substitute(substitute(expand("%:h"), '\v^\w+\/(\u)', '\1', ''), '\/', '\\\', 'g')`};
	
	use Symfony\Bundle\FrameworkBundle\Command\Command;
	use Symfony\Component\Console\Input\InputInterface;
	use Symfony\Component\Console\Output\OutputInterface;
	
	/**
	 * ${2:`Filename('', 'myCommand')`}.
	 *
	 * @author ${3:Olivier Dolbeau <contact@odolbeau.fr>}
	 */
	class $2 extends Command
	{
		protected function configure()
		{
			$this
				->setName('${4}');
		}

		protected function execute(InputInterface $input, OutputInterface $output)
		{
		}
	}
snippet set
	public function set${1:CamelCase}($${2:property})
	{
		$this->$2 = $$2;
	}
snippet get
	public function get${1:Property}()
	{
		return $this->${2:property};
	}
snippet getset
	public function get${1:Property}()
	{
		return $this->${2:property};
	}
	public function set$1($$2)
	{
		$this->$2 = $$2;
	}
snippet pubfun
	public function ${1:name}(${2})
	{
		${3}
	}
snippet action
	public function ${1:action}Action(${2})
	{
		${3}
		return $this->render();
	}
snippet pre
	echo '<pre>';
	print_r($${1});
	echo '</pre>';
	${2}
snippet vdd
	var_dump($${1});die;
	${2}
snippet vd
	var_dump($${1});
	${2}

snippet cl
	<?php

	namespace ${1:`substitute(substitute(expand("%:h"), '\v^\w+\/(\u)', '\1', ''), '\/', '\\\', 'g')`};

	class ${2:`Filename('', 'myClass')`}
	{
	    ${3}
	}

snippet inherit
	/**
	 * {@inheritDoc}
	 */

